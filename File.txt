# ðŸ“± MVVM with Alamofire (SwiftUI + Combine)

This project demonstrates a clean **MVVM (Model-View-ViewModel)** architecture in Swift, with **Alamofire** for networking and **Combine** for reactive data binding.  

The goal is to achieve a clear separation of concerns:  
- **Model** â†’ Defines your data structures.  
- **Network Service / Repository** â†’ Handles API requests & JSON decoding.  
- **ViewModel** â†’ Business & presentation logic, connects Network with UI.  
- **View (SwiftUI)** â†’ Declares UI, reacts automatically to `@Published` changes in ViewModel.  

---

## ðŸ“‚ Project Structure